tomcat:
    # The Tomcat version can be overridden like so.
    # ver: 7
    security: 'no'
    # The Java home directory can be overridden like so.
    # java_home: '/usr/lib/jvm/default-java'
    
    # Any parameter you may pass to the java app, you can pass it here,
    # without the preceding dash. The template builds the correct JAVA_OPTS
    # line, adding the dash.
    # Java's parameter don't follow a pattern (that I can see), so I think it's
    # the best way to build the string of opts.
    java_opts:
      - 'Djava.awt.headless=true'
      - 'Xmx128m'
      - 'XX:MaxPermSize=256m'
      - 'XX:+UseConcMarkSweepGC'
      - 'XX:+CMSIncrementalMode'
      - 'Dlog4j.configuration=file:/path/to/log4j.properties'
      - 'Dlogback.configurationFile=/path/to/logback.xml'
    jsp_compiler: javac
    logfile_days: 14
    logfile_compress: 1
    jvm_tmp: /tmp/tomcat
    authbind: no
    expires_when: '2 weeks'
    with_haveged: true
    haveged_enabled: true
    cluster:
      simple: true

    catalina_base: /usr/share/tomcat
    catalina_home: /usr/share/tomcat
    catalina_tmpdir: /var/cache/tomcat/temp
    catalina_pid: /var/run/tomcat.pid

    limit:
      soft: 64000
      hard: 64000
    connector:
      example_connector:
        port: 8443
        protocol: 'org.apache.coyote.http11.Http11Protocol'
        connectionTimeout: 20000
        URIEncoding: 'UTF-8'
        redirectPort: 8443
        maxHttpHeaderSize: 8192
        maxThreads: 150
        minSpareThreads: 25
        enableLookups: 'false'
        disableUploadTimeout: 'true'
        acceptCount: 100
        scheme: https
        secure: 'true'
        SSLEnabled: 'true'
        clientAuth: 'false'
        sslProtocol: TLS
        keystoreFile: '/path/to/keystoreFile'
        keystorePass: 'somerandomtext'
    sites:
        example.com: # must be unique; used as an ID declaration in Salt; also used in the  template as {{ host_name }} is name is not declared
          name: some_string # to use as "Host name=" in server.xml definitions. If not declared, ID declaration will be used
          appBase: ../webapps/myapp
          path: ''
          docBase: '/var/lib/tomcat7/webapps/myapp'
          alias: {{ id }}
          unpackWARs: "true"
          autoDeploy: "true"
          reloadable: "true"
          debug: 0
        example.net:
          appBase: ../webapps/myapp2
          path: ''
          docBase: '/var/lib/tomcat7/webapps/myapp2'
          alias: {{ id }}
          unpackWARs: "true"
          autoDeploy: "true"
          reloadable: "true"
          debug: 0
    manager:
        # UPDATE: This version of the pillar file now supports multiple user acccounts and variable roles.  The previous version of this formula supported only a single user and fixed roles.
        roles:
          - manager-gui
          - manager-script
          - manager-jmx
          - manager-status
        users:
          saltuser1:
            passwd: RfgpE2iQwD
            roles: manager-gui,manager-script,manager-jmx,manager-status
          saltuser2:
            passwd: RfgpE2iQwD
            roles: manager-gui,manager-script,manager-jmx,manager-status
    context:
      # Let's you define multiple elements in the global context.xml file.
      # The state does not try to be clever about the correctness of what you add here,
      # just iterates over the dictionary of <Elements_types> and generates entries
      # in the file. Ie, the lines below will generate:
      #
      # <Environment
      #     name="env.first"
      #     value="first.text"
      #     type="java.lang.String"
      #     override="true"
      # />
      # <Environment 
      #     name="env.second"
      #     value="second.value"
      #     type="some.other.type"
      #     override="false"
      # />
      # <Listener
      #     className="org.apache.catalina.security.SecurityListener"
      # />
      # <Listener
      #     className="org.apache.catalina.core.AprLifecycleListener"
      #     SSLEngine="on"
      # />
      # <Resource
      #     name="jdbc/__postgres"
      #     auth="Container"
      #     type="javax.sql.DataSource"
      #     driverClassName="org.postgresql.Driver"
      #     url="jdbc:postgresql://db.server/dbname"
      #     username="dbuser"
      #     password="aycaramba!"
      #     maxActive="20"
      #     maxIdle="10"
      #     maxWait="-1"
      # />
      # <ResourceLink
      #     name="linkToGlobalResource"
      #     global="simpleValue"
      #     type="java.lang.Integer"
      # />

      Environment:
        env.first:
          name: env.first
          value: first.text
          type: java.lang.String
          override: true
        env.second:
          name: env.second
          value: second.value
          type: some.other.type
          override: false
      Listener:
        first:
          className: org.apache.catalina.security.SecurityListener
        second:
          className: org.apache.catalina.core.AprLifecycleListener
          SSLEngine: on 
      Resource:
        jdbc:
          name: jdbc/__postgres
          auth: Container
          type: javax.sql.DataSource
          driverClassName: org.postgresql.Driver
          url: jdbc:postgresql://db.server/dbname
          user: dbuser
          password: aycaramba!
          maxActive: 20
          maxIdle: 10
          maxWait: -1
      ResourceLink:
        any_name_here_will_be_ignored:
          name: linkToGlobalResource
          global: simpleValue
          type: java.lang.Integer
